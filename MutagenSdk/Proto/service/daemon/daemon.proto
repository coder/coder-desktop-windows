/*
 * This file was taken from
 * https://github.com/coder/mutagen/tree/v0.18.3/pkg/service/daemon/daemon.proto
 *
 * MIT License
 *
 * Copyright (c) 2016-present Docker, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

syntax = "proto3";

package daemon;
option csharp_namespace = "Coder.Desktop.MutagenSdk.Proto.Service.Daemon";

option go_package = "github.com/mutagen-io/mutagen/pkg/service/daemon";

message VersionRequest{}

message VersionResponse {
    // TODO: Should we encapsulate these inside a Version message type, perhaps
    // in the mutagen package?
    uint64 major = 1;
    uint64 minor = 2;
    uint64 patch = 3;
    string tag = 4;
}

message TerminateRequest{}

message TerminateResponse{}

service Daemon {
    rpc Version(VersionRequest) returns (VersionResponse) {}
    rpc Terminate(TerminateRequest) returns (TerminateResponse) {}
}
