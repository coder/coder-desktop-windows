<?xml version="1.0" encoding="utf-8"?>

<Page
    x:Class="Coder.Desktop.App.Views.Pages.FileSyncListMainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:Coder.Desktop.App.Models"
    xmlns:converters="using:Coder.Desktop.App.Converters"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <ScrollView>
        <StackPanel Orientation="Vertical" Padding="30,15">
            <!--
                We use separate grids for the header and each child because WinUI 3
                doesn't support having a dynamic row count.

                This unfortunately means we need to copy the resources and the
                column definitions to each Grid.
            -->
            <Grid Margin="0,0,0,5">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
                    </Style>
                    <Style TargetType="Border">
                        <Setter Property="Padding" Value="40,0,0,0" />
                    </Style>
                </Grid.Resources>

                <!-- Cannot use "Auto" as it won't work for multiple Grids. -->
                <Grid.ColumnDefinitions>
                    <!-- Icon column: 14 + 5 padding + 14 + 10 padding -->
                    <ColumnDefinition Width="43" />
                    <ColumnDefinition Width="2*" MinWidth="200" />
                    <ColumnDefinition Width="1*" MinWidth="120" />
                    <ColumnDefinition Width="2*" MinWidth="200" />
                    <ColumnDefinition Width="1*" MinWidth="100" MaxWidth="200" />
                    <ColumnDefinition Width="1*" MinWidth="100" MaxWidth="200" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="1" Padding="10,0,0,0">
                    <TextBlock Text="Local Path" />
                </Border>
                <Border Grid.Column="2">
                    <TextBlock Text="Workspace" />
                </Border>
                <Border Grid.Column="3">
                    <TextBlock Text="Remote Path" />
                </Border>
                <Border Grid.Column="4">
                    <TextBlock Text="Status" />
                </Border>
                <Border Grid.Column="5">
                    <TextBlock Text="Size" />
                </Border>
            </Grid>

            <Border
                Height="1"
                Margin="-30,0,-30,5"
                Background="{ThemeResource ControlElevationBorderBrush}" />

            <ItemsRepeater ItemsSource="{x:Bind ViewModel.Sessions, Mode=OneWay}">
                <ItemsRepeater.Layout>
                    <StackLayout Orientation="Vertical" />
                </ItemsRepeater.Layout>

                <ItemsRepeater.ItemTemplate>
                    <DataTemplate x:DataType="models:MutagenSessionModel">
                        <Grid Margin="0,10">
                            <!-- These are (mostly) from the header Grid and should be copied here -->
                            <Grid.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="Padding" Value="40,0,0,0" />
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="43" />
                                <ColumnDefinition Width="2*" MinWidth="200" />
                                <ColumnDefinition Width="1*" MinWidth="120" />
                                <ColumnDefinition Width="2*" MinWidth="200" />
                                <ColumnDefinition Width="1*" MinWidth="100" MaxWidth="200" />
                                <ColumnDefinition Width="1*" MinWidth="100" MaxWidth="200" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Padding="0" HorizontalAlignment="Right">
                                <StackPanel Orientation="Horizontal">
                                    <HyperlinkButton Padding="0" Margin="0,0,5,0">
                                        <FontIcon Glyph="&#xE769;" FontSize="15"
                                                  Foreground="{ThemeResource DefaultTextForegroundThemeBrush}" />
                                    </HyperlinkButton>
                                    <HyperlinkButton Padding="0">
                                        <FontIcon Glyph="&#xF140;" FontSize="15"
                                                  Foreground="{ThemeResource DefaultTextForegroundThemeBrush}" />
                                    </HyperlinkButton>
                                </StackPanel>
                            </Border>
                            <Border Grid.Column="1" Padding="10,0,0,0">
                                <TextBlock
                                    Text="{x:Bind LocalPath}"
                                    TextTrimming="CharacterEllipsis"
                                    IsTextTrimmedChanged="TooltipText_IsTextTrimmedChanged" />
                            </Border>
                            <Border Grid.Column="2">
                                <TextBlock
                                    Text="{x:Bind RemoteName}"
                                    TextTrimming="CharacterEllipsis"
                                    IsTextTrimmedChanged="TooltipText_IsTextTrimmedChanged" />
                            </Border>
                            <Border Grid.Column="3">
                                <TextBlock
                                    Text="{x:Bind RemotePath}"
                                    TextTrimming="CharacterEllipsis"
                                    IsTextTrimmedChanged="TooltipText_IsTextTrimmedChanged" />
                            </Border>
                            <Border Grid.Column="4">
                                <Border.Resources>
                                    <converters:StringToBrushSelector
                                        x:Key="StatusColor"
                                        SelectedKey="{x:Bind Path=Status}">

                                        <converters:StringToBrushSelectorItem
                                            Value="{ThemeResource SystemFillColorCriticalBrush}" />
                                        <converters:StringToBrushSelectorItem
                                            Key="Paused"
                                            Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
                                        <converters:StringToBrushSelectorItem
                                            Key="Error"
                                            Value="{ThemeResource SystemFillColorCriticalBrush}" />
                                        <converters:StringToBrushSelectorItem
                                            Key="NeedsAttention"
                                            Value="{ThemeResource SystemFillColorCautionBrush}" />
                                        <converters:StringToBrushSelectorItem
                                            Key="Working"
                                            Value="{ThemeResource SystemFillColorAttentionBrush}" />
                                        <converters:StringToBrushSelectorItem
                                            Key="Ok"
                                            Value="{ThemeResource DefaultTextForegroundThemeBrush}" />
                                    </converters:StringToBrushSelector>
                                </Border.Resources>
                                <TextBlock
                                    Text="{x:Bind StatusString}"
                                    TextTrimming="CharacterEllipsis"
                                    Foreground="{Binding Source={StaticResource StatusColor}, Path=SelectedObject}"
                                    ToolTipService.ToolTip="{x:Bind StatusDetails}" />
                            </Border>
                            <Border Grid.Column="5">
                                <TextBlock
                                    Text="{x:Bind MaxSize.SizeBytes, Converter={StaticResource FriendlyByteConverter}}"
                                    ToolTipService.ToolTip="{x:Bind SizeDetails}" />
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ItemsRepeater.ItemTemplate>
            </ItemsRepeater>

            <!-- "New Sync" button -->
            <!--
                HACK: this has some random numbers for padding and margins. Since
                we need to align the icon and the text to the two grid columns
                above (but still have it be within the same button), this is the
                best solution I could come up with.
            -->
            <HyperlinkButton
                Margin="13,5,0,0"
                Command="{x:Bind ViewModel.StartCreatingNewSessionCommand}"
                Visibility="{x:Bind ViewModel.CreatingNewSession, Converter={StaticResource InverseBoolToVisibilityConverter}, Mode=OneWay}">

                <StackPanel Orientation="Horizontal">
                    <FontIcon
                        FontSize="18"
                        Margin="0,0,10,0"
                        Glyph="&#xE710;"
                        Foreground="{ThemeResource SystemFillColorSuccessBrush}" />
                    <TextBlock
                        Text="New Sync"
                        Foreground="{ThemeResource DefaultTextForegroundThemeBrush}" />
                </StackPanel>
            </HyperlinkButton>

            <!-- New item Grid -->
            <Grid
                Margin="0,10"
                Visibility="{x:Bind ViewModel.CreatingNewSession, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">

                <!-- These are (mostly) from the header Grid and should be copied here -->
                <Grid.Resources>
                    <Style TargetType="Border">
                        <Setter Property="Padding" Value="40,0,0,0" />
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="43" />
                    <ColumnDefinition Width="2*" MinWidth="200" />
                    <ColumnDefinition Width="1*" MinWidth="120" />
                    <ColumnDefinition Width="2*" MinWidth="200" />
                    <ColumnDefinition Width="1*" MinWidth="100" MaxWidth="200" />
                    <ColumnDefinition Width="1*" MinWidth="100" MaxWidth="200" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Padding="0">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <!-- TODO: gray out the button if the form is not filled out correctly -->
                        <HyperlinkButton
                            Padding="0"
                            Margin="0,0,5,0"
                            Command="{x:Bind ViewModel.ConfirmNewSessionCommand}">

                            <FontIcon Glyph="&#xE930;" FontSize="15"
                                      Foreground="{ThemeResource SystemFillColorSuccessBrush}" />
                        </HyperlinkButton>
                        <HyperlinkButton
                            Padding="0"
                            Command="{x:Bind ViewModel.CancelNewSessionCommand}">

                            <FontIcon Glyph="&#xF096;" FontSize="15"
                                      Foreground="{ThemeResource SystemFillColorCriticalBrush}" />
                        </HyperlinkButton>
                    </StackPanel>
                </Border>
                <Border Grid.Column="1" Padding="10,0,0,0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBox
                            Grid.Column="0"
                            Margin="0,0,5,0"
                            VerticalAlignment="Stretch"
                            Text="{x:Bind ViewModel.NewSessionLocalPath, Mode=TwoWay}" />

                        <Button
                            Grid.Column="1"
                            IsEnabled="{x:Bind ViewModel.NewSessionLocalPathDialogOpen, Converter={StaticResource InverseBoolConverter}, Mode=OneWay}"
                            Command="{x:Bind OpenLocalPathSelectDialogCommand}"
                            VerticalAlignment="Stretch">

                            <FontIcon Glyph="&#xE838;" FontSize="13" />
                        </Button>
                    </Grid>
                </Border>
                <Border Grid.Column="2">
                    <!-- TODO: use a combo box for workspace agents -->
                    <!--
                    <ComboBox
                        ItemsSource="{x:Bind WorkspaceAgents}"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch" />
                    -->
                    <TextBox
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Text="{x:Bind ViewModel.NewSessionRemoteName, Mode=TwoWay}" />
                </Border>
                <Border Grid.Column="3">
                    <TextBox
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Text="{x:Bind ViewModel.NewSessionRemotePath, Mode=TwoWay}" />
                </Border>
            </Grid>
        </StackPanel>
    </ScrollView>
</Page>
